jobs:
  build:
    docker:
      - image: node:8.9.1
    steps:
      - checkout
      - run:
          name: Install node deps and build
          command: |
            npm install
            if [ "$CIRCLE_BRANCH" == 'development' ]; then
              NODE_WORKSPACE=PRODDUCTION npm run build:dev
            else
              NODE_WORKSPACE=PRODDUCTION npm run build:prod
            fi
            gzip dist/dcl-react.js
      - run:
          name: Run Tests
          environment:
            JEST_JUNIT_OUTPUT: reports/junit/js-test-results.xml
          command: |
            npm run test:ci
      - run:
          name: Run Linter
          command: |
            npm run lint:ci
      - store_test_results:
          path: reports/junit
      - persist_to_workspace:
          root: "."
          paths:
            - dist/*
            - docs/*
  deploy-dev:
    docker:
      - image: ${STAGING_ECR_URL}/docker-deploy
        aws_auth:
          aws_access_key_id: $STAGING_AWS_ACCESS_KEY_ID
          aws_secret_access_key: $STAGING_AWS_SECRET_ACCESS_KEY
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: S3 Sync
          command: |
            aws s3 cp /tmp/dist/dcl-react.js.gz s3://cdn.datacamp.com/dcl-react-dev.js.gz --acl public-read --content-encoding "gzip" --content-type "application/javascript" --cache-control "max-age=1296000"
            aws cloudfront create-invalidation --distribution-id E11JM11LLUSZQE --paths "/dcl-react-dev.js.gz"
            
            aws s3 cp /tmp/dist/dcl-react.js.gz s3://cdn.datacamp.com/dcl-react-dev/dcl-react.js.gz --acl public-read --content-encoding "gzip" --content-type "application/javascript"
            aws s3 cp /tmp/docs/index.html s3://cdn.datacamp.com/dcl-react-dev/index.html --acl public-read --content-type "text/html"
            aws s3 cp /tmp/docs/example.html s3://cdn.datacamp.com/dcl-react-dev/example.html --acl public-read --content-type "text/html"
  deploy:
    docker:
      - image: ${STAGING_ECR_URL}/docker-deploy
        aws_auth:
          aws_access_key_id: $STAGING_AWS_ACCESS_KEY_ID
          aws_secret_access_key: $STAGING_AWS_SECRET_ACCESS_KEY
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: S3 Sync
          command: |
            aws s3 cp /tmp/dist/dcl-react.js.gz s3://cdn.datacamp.com/dcl-react-staging.js.gz --acl public-read --content-encoding "gzip" --content-type "application/javascript" --cache-control "max-age=1296000"
            aws cloudfront create-invalidation --distribution-id E11JM11LLUSZQE --paths "/dcl-react-staging.js.gz"

            aws s3 cp /tmp/dist/dcl-react.js.gz s3://cdn.datacamp.com/dcl-react-staging/dcl-react.js.gz --acl public-read --content-encoding "gzip" --content-type "application/javascript"
            aws s3 cp /tmp/docs/index.html s3://cdn.datacamp.com/dcl-react-staging/index.html --acl public-read --content-type "text/html"
            aws s3 cp /tmp/docs/example.html s3://cdn.datacamp.com/dcl-react-staging/example.html --acl public-read --content-type "text/html"
  deploy-prod:
    docker:
      - image: ${STAGING_ECR_URL}/docker-deploy
        aws_auth:
          aws_access_key_id: $STAGING_AWS_ACCESS_KEY_ID
          aws_secret_access_key: $STAGING_AWS_SECRET_ACCESS_KEY
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: S3 Sync
          command: |
            aws s3 cp /tmp/dist/dcl-react.js.gz s3://cdn.datacamp.com/dcl-react.js.gz --acl public-read --content-encoding "gzip" --content-type "application/javascript" --cache-control "max-age=1296000"
            aws cloudfront create-invalidation --distribution-id E11JM11LLUSZQE --paths "/dcl-react.js.gz"

            aws s3 cp /tmp/dist/dcl-react.js.gz s3://cdn.datacamp.com/dcl-react-prod/dcl-react.js.gz --acl public-read --content-encoding "gzip" --content-type "application/javascript"
            aws s3 cp /tmp/docs/index.html s3://cdn.datacamp.com/dcl-react-prod/index.html --acl public-read --content-type "text/html"
            aws s3 cp /tmp/docs/example.html s3://cdn.datacamp.com/dcl-react-prod/example.html --acl public-read --content-type "text/html"
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          context: org-global
          filters:
            tags:
              only: /.*/
      - deploy-dev:
          requires:
            - build
          context: org-global
          filters:
            branches:
              only:
                - development
      - deploy:
          requires:
            - build
          context: org-global
          filters:
            branches:
              only:
                - master
      - deploy-prod:
          requires:
            - build
          context: org-global
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+(-\w+\.\d+)?$/
            branches:
              ignore: /.*/
         
